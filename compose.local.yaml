services:
  db:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: kotak
    ports:
      - "5432:5432"
    volumes:
      - ./database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d kotak"]
      interval: 5s
      timeout: 5s
      retries: 5

  valkey:
    image: valkey/valkey
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./valkey:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrator:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["bun", "run", "db:migrate"]
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      db:
        condition: service_healthy

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["bun", "--bun", "run", "."]
    restart: always
    environment:
      BODY_SIZE_LIMIT: Infinity
      PROTOCOL: ${PROTOCOL}
      ORIGIN: ${PROTOCOL}://${DOMAIN}
      DATABASE_URL: ${DATABASE_URL}
      LIMITER_SECRET: ${LIMITER_SECRET}
    ports:
      - "4321:3000"
    volumes:
      - ./storage:/usr/src/app/storage:rw
    depends_on:
      db:
        condition: service_healthy
